// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model DailyLogs {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  title  String
  action String
  date   DateTime
  Tag    Tag?     @relation(fields: [tagId], references: [id])
  tagId  String?  @db.ObjectId
  User   User?    @relation(fields: [userId], references: [id])
  userId String?  @db.ObjectId
}

model Tag {
  id   String      @id @default(auto()) @map("_id") @db.ObjectId
  name String
  logs DailyLogs[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?     @unique
  emailVerified  DateTime?   @map("email_verified")
  hashedPassword String?
  image          String?
  createdAt      DateTime?   @default(now())
  updatedAt      DateTime?   @updatedAt
  accounts       Account[]
  DailyLogs      DailyLogs[]

  @@map("users")
}
